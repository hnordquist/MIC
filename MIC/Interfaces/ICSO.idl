// ICSO.idl : IDL source for the ICSO interface
//

// This file will be processed by the MIDL tool


import "oaidl.idl";
	[
		object,
		uuid(B7180771-895F-417E-8239-353EE09F7009),
	]
	interface ICSO : IDispatch
	{
		typedef [v1_enum]  //32 bit alignment
		enum tagISO_FUNCTIONAL_CATEGORY
		{
			STANDARD_ISO     = 0,
			WATCH_ISO        = 1,
			UPS_ISO          = 2,
			UNKNOWN_ISO      = 99
		} ISO_FUNCTIONAL_CATEGORY;

		[id(1), helpstring("method CollectParametersForNewCSO")] 
			HRESULT CollectParametersForNewCSO(
				[out] BSTR *pbstrNameOut,
				[out] VARIANT_BOOL *pvbHaveNewCSO);

		[id(2), helpstring("method EnableHeartbeat")] HRESULT EnableHeartbeat([in] VARIANT_BOOL vbCommand);
		[id(3), helpstring("method get_CSOTypeString")] HRESULT get_CSOTypeString([out] BSTR *pbstrTypeString);
		[id(4), helpstring("method get_LastError")] HRESULT get_LastError([out] BSTR *pbstrErrorString);
		[id(5), helpstring("method get_Name")] HRESULT get_Name([out] BSTR *pbstrName);
		[id(6), helpstring("method get_VersionString")] HRESULT get_VersionString([out] BSTR *pbstrVersionString);
		[id(7), helpstring("method put_DialogAutoCloseTime")] HRESULT put_DialogAutoCloseTime([in] ULONG uSeconds);
		[id(8), helpstring("method put_INIPathname")] HRESULT put_INIPathname([in] BSTR bstrPathname);
		[id(9), helpstring("method put_Name")] HRESULT put_Name([in] BSTR bstrName);

		[id(10), helpstring("method put_WindowsRegisteredMessageStrings")]
		HRESULT put_WindowsRegisteredMessageStrings(
			[in] ULONG ulRECEIVE,
			[in] ULONG ulRECEIVE_OOB,
			[in] ULONG ulSTART,
			[in] ULONG ulSTOP,
			[in] ULONG ulRESET);

		[id(11), helpstring("method put_ThresholdValue")] HRESULT put_ThresholdValue([in] ULONG uThresholdValue);

		[id(12), helpstring("method RegisterISO")] 
		HRESULT RegisterISO(
			[in] ULONG uReceiverHandle,
			[in] ULONG uNode,
			[in] ISO_FUNCTIONAL_CATEGORY eCategory,
			[in] VARIANT_BOOL vbOOB, 
			[out] VARIANT_BOOL *pvbResult);

		[id(13), helpstring("method ResetCSO")]HRESULT ResetCSO();
		[id(14), helpstring("method SendHeartbeat")] HRESULT SendHeartbeat();
		[id(15), helpstring("method SendToWatch")] HRESULT SendToWatch([in] BSTR bstrDisplayString, [in] ULONG uNode);
		[id(16), helpstring("method SetUpPort")] HRESULT SetUpPort([in] BSTR bstrPortName, [out] VARIANT_BOOL *pvbResult);
		[id(17), helpstring("method ShutdownCSO")] HRESULT ShutdownCSO();
		[id(18), helpstring("method StartCSO")] HRESULT StartCSO();

		[id(19), helpstring("method Transmit")] 
		HRESULT Transmit(
			[in] ULONG uLength,
			[in] BLOB blobData, 
			[in] ULONG uNode, 
			[in] VARIANT_BOOL vbQuiet, 
			[out] ULONG *puBytesWritten);

		[id(20), helpstring("method UnRegisterISO")] HRESULT UnRegisterISO([in] ULONG uNode, [in] ISO_FUNCTIONAL_CATEGORY eCategory);

	};