<HTML>
	<HEAD>
		<meta name="vs_targetSchema" content="http://schemas.microsoft.com/intellisense/ie5">
		<TITLE></TITLE>
		<LINK href="EossReaderStyleSheet.css" type="text/css" rel="stylesheet" media="screen">
		<LINK href="EossReaderPrintStyleSheet.css" type="text/css" rel="stylesheet" media="print">
		<SCRIPT language="JavaScript" src="EossIncludes.js"></SCRIPT>
		<SCRIPT language="JavaScript">
		function window.onload()
		{
			try {
				// complete the caption			
				GroupName.innerText = IGroup.Name;
				
				for (var i = 0; i < IGroup.Count; i++)
				{
					try 
					{
						var Seal = IGroup.Seal(i);
						AddData(Seal);
					}
					catch (e) {alert(e.description)}
				}
			}
			catch (e) {
				window.location.href ="EossReaderBlank.htm";
			}				
		}
		function AddSeparator()
		{
			var Row = Report.insertRow();
			var Cell1 = Row.insertCell();
			var Cell2 = Row.insertCell();
			var Cell3 = Row.insertCell();
			var Cell4 = Row.insertCell();
			var Cell5 = Row.insertCell();
			Cell1.className = "detail";
			Cell2.className = "detail";
			Cell3.className = "detail";
			Cell4.className = "detail";
			Cell5.className = "detail";
			Cell1.innerText = " ";
			Cell2.innerText = " ";
			Cell3.innerText = " ";
			Cell4.innerText = " ";
			Cell5.innerText = " ";
		}						
		function AddLine(Number, Time, Image, Message, Link)
		{
			var Row = Report.insertRow();
			var Cell1 = Row.insertCell();
			var Cell2 = Row.insertCell();
			var Cell3 = Row.insertCell();
			var Cell4 = Row.insertCell();
			var Cell5 = Row.insertCell();
			Cell1.innerHTML = Number;
			Cell2.innerHTML = Time;
			Cell3.innerHTML = Image;
			Cell3.width = 30;
			Cell4.innerHTML = Message;
			Cell5.innerHTML = Link;
		}
		function GetValue(ParentNode, ValueName)
		{
			var ValueNode = ParentNode.selectSingleNode(ValueName);
			if (ValueNode) return ValueNode.text;
			return "";
		}
		function StatusWarnings(Seal, Status)
		{
			var Warnings = 0;
			if (!Seal.KeysetNumber) Warnings++;
			if (GetValue(Status, "protection") != "safe") Warnings++;
			if (GetValue(Status, "housing") != "closed") Warnings++;
			if (GetValue(Status, "sealwire") != "closed") Warnings++;
			if (GetValue(Status, "bat-consumed") > 2000) Warnings++;
			if (GetValue(Status, "bat-volts") < 1.8) Warnings++;
			return Warnings;
		}
		function UnattendedEvents(Seal)
		{
			var XPath = "//eoss/seal[@sn='" + Seal.SerialNumber + "']/key[@no='" + Seal.KeysetNumber + "'][@date='" + Seal.KeysetDate + "'][@time='" + Seal.KeysetTime + "']"; 
			var KeysetNode = IDocument.selectSingleNode(XPath);
			var StyleSheet = new ActiveXObject("Msxml2.DOMDocument.3.0");
			StyleSheet.async = false;
			StyleSheet.resolveExternals = false;
			StyleSheet.load("EossReaderUnattendedEvents.xslt");
			// apply the transformation and return the result
 			return (KeysetNode.transformNode(StyleSheet));
		}
		function LastSealEvent(Seal)
		{
			try
			{
				var XPath = "//eoss/seal[@sn='" + Seal.SerialNumber + "']/key[@no='" + Seal.KeysetNumber + "'][@date='" + Seal.KeysetDate + "'][@time='" + Seal.KeysetTime + "']"; 
				var KeysetNode = IDocument.selectSingleNode(XPath);
				var StyleSheet = new ActiveXObject("Msxml2.DOMDocument.3.0");
				StyleSheet.async = false;
				StyleSheet.resolveExternals = false;
				StyleSheet.load("EossReaderLastSealEvents.xslt");
				var ResultString = KeysetNode.transformNode(StyleSheet);

				var EventList = new ActiveXObject("Msxml2.DOMDocument.3.0");
				EventList.async = false;
				EventList.resolveExternals = false;
				EventList.loadXML(ResultString);
				var LastEventNode = EventList.selectSingleNode("//fo/event[0]");
				
 				return (LastEventNode.text);
 			}
 			catch (e)
 			{
 				return ("");
 			}
		}
		function AddData(Seal)
		{
			var Number = "<b>EOSS " + Seal.SerialNumber + "</b>";
			if (Seal.Error == "") {
				var Time = "";
				var Image = "";
				var Message = "";
				var Link = ">> More";
				
				var XPath = "//eoss/seal[@sn='" + Seal.SerialNumber+ "']/key[@no='" + Seal.KeysetNumber + "'][@date='" + Seal.KeysetDate + "'][@time='" + Seal.KeysetTime + "']/status/plain"; 
				var Status = IDocument.selectSingleNode(XPath);
				if (Status)	{
					Time =  Status.getAttribute("date") + ' ' + Status.getAttribute("time");
					Warnings = StatusWarnings(Seal, Status);
					if (Warnings) {
						Image = "<img src='excl.gif'>"
						Message = "Seal status is not okay.";
					}
					else {
						Image = "<img src='tick.gif'>";
						Message = "Seal status is okay.";
					}
				}
				var Params = '"' + Seal.SerialNumber + '","' + Seal.KeysetNumber + '","' + Seal.KeysetDate + '","' + Seal.KeysetTime + '"';
				Link = "<a onclick='GotoStatus(" + Params + ")' href='#'>" + Link + "</a>";
				AddLine(Number, Time, Image, Message, Link);
				
				Link = ">> More";
				
				Warnings = UnattendedEvents(Seal);
				if (Warnings != "0") {				
					Image = "<img src='excl.gif'>"
					Message = Warnings + " critical event(s).";
				}
				else {
					Image = "<img src='tick.gif'>";
					Message = "No critical events.";
				} 
				Link = "<a onclick='GotoVerification(" + Params + ")' href='#'>" + Link + "</a>";
				AddLine("", LastSealEvent(Seal), Image, Message, Link);
			}
			else
			{
				AddLine(Number, "<b><span style='color=crimson'>Read-out failed</span></b>", "", "", "");
			}
			AddSeparator();
		}
		function GotoStatus(SerialNumber, Number, Date, Time)
		{
			// store the current key-set node in a session variable...
			var XPath = "//eoss/seal[@sn='" + SerialNumber + "']/key[@no='" + Number + "'][@date='" + Date + "'][@time='" + Time + "']"; 
			var KeysetNode = IDocument.selectSingleNode(XPath);
			if (KeysetNode) {
				ISession.SetValue("KeysetNode", KeysetNode);
				// and go to...
				window.location.href ="EossReaderDatabaseStatus.htm"
			}
		}
		function GotoVerification(SerialNumber, Number, Date, Time)
		{
			// store the current key-set node in a session variable...
			var XPath = "//eoss/seal[@sn='" + SerialNumber + "']/key[@no='" + Number + "'][@date='" + Date + "'][@time='" + Time + "']"; 
			var KeysetNode = IDocument.selectSingleNode(XPath);
			if (KeysetNode) {
				ISession.SetValue("KeysetNode", KeysetNode);
				// and go to...
				window.location.href ="EossReaderVerification.htm"
			}
		}		
		</SCRIPT>
	</HEAD>
	<body>
		<h1><span onclick="Test()" id="GroupName"></span>
		</h1>
		<table cellSpacing="0" cellPadding="0" width="100%">
			<tr>
				<td class="corner" width="5" height="5"><img src="ulsb.gif"></td>
				<td class="windowcaption"></td>
				<td class="corner" width="5" height="5"><img src="ursb.gif"></td>
			</tr>
			<tr class="windowcaption">
				<td width="5"></td>
				<td>Group Report</td>
				<td width="5"></td>
			</tr>
		</table>
		<table class="windowframe" cellSpacing="0" cellPadding="5" width="100%">
			<tr class="info">
				<td>
					<table id="Report" class="info" cellSpacing="1" cellPadding="1" width="100%">
					</table>
				</td>
			</tr>
			<tr class="info">
				<td>
					<table cellSpacing="1" cellPadding="5" width="100%">
						<tr class="menu">
							<td><a href="JavaScript:history.back(1)">&lt;&lt; Back</a>
							</td>
						</tr>
					</table>
				</td>
			</tr>
		</table>
		<br>
	</body>
</HTML>
