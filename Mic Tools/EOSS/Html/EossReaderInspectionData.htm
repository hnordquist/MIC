<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
		<meta name="vs_targetSchema" content="http://schemas.microsoft.com/intellisense/ie5">
		<title></title>
		<LINK href="EossReaderStyleSheet.css" type="text/css" rel="stylesheet" media="screen">
		<LINK href="EossReaderPrintStyleSheet.css" type="text/css" rel="stylesheet" media="print">
		<script language="JavaScript" src="EossIncludes.js"></script>
		<script language="JavaScript">
			function window.onload()
			{
				try {
               // cursor shape
               Body.style.cursor = "wait";
               StoreButton.style.cursor = "wait";

					// complete the caption
					SerialNumber.innerText = ISeal.SerialNumber;
					try {
						var Text = ISeal.ReadPad();
						GetValues(Text);
					}
					catch (e) {
						window.location.href ="EossReaderError.htm";
					}
               Body.style.cursor = "default";
               StoreButton.style.cursor = "default";

				}
				catch (e) {
					window.location.href ="EossReaderBlank.htm";
				}
			}

			function WhenAndByWhom(Date, Time, Op1, Op2)
			{
				if (Op1 == null) Op1 = "";
				if (Op2 == null) Op2 = "";
				var Text = "Last modified on " + Date + " at " + Time + " by ";
				if ((Op1 == "") && (Op2 == "")) 
					return Text += "anonymous operator";
				if 	((Op1 != "") && (Op2 != "")) 
					return Text += Op1 + " and " + Op2;
				if (Op1 != "")
					return Text += Op1;
				if (Op2 != "")
					return Text += Op2;
			}
			function GetValues(Text)
			{
				Modified.innerText = " ";
				var InspDoc = new ActiveXObject("Msxml2.DOMDocument");
				try {
					// load data into xml document
					InspDoc.loadXML(Text);
					var Inspection = InspDoc.documentElement; 
					var Nodes = Inspection.selectNodes("*");
					try {
						Modified.innerText = WhenAndByWhom(Inspection.getAttribute("date"), Inspection.getAttribute("time"),
												Inspection.getAttribute("o1"),  Inspection.getAttribute("o2"));
					}		
					catch (e) {}
					for (var i = 0; i < Nodes.length; i++)
					{
						var Node = Nodes.item(i);
						try {
							var Item = document.all.namedItem(Node.nodeName);
							Item.value = Node.text;
						}
						catch (e) {}
					}
				}
				catch (e) {}
			}
			function AddValue(Doc, Root, Name, Value)
			{
				var Element = Doc.createElement(Name);
				var Node = Doc.createTextNode(Value);
				Element.appendChild(Node);
				Root.appendChild(Element);
			}	
			function Store()
			{
				try {
               Body.style.cursor = "wait";
               StoreButton.style.cursor = "wait";

					try {
						ISeal.GetStatus();
					}
					catch (e) {
						window.location.href ="EossReaderError.htm";
						return;
					}
	
					var XPath = "//eoss/seal[@sn='" + ISeal.SerialNumber+ "']/key[@no='" + ISeal.KeysetNumber + "'][@date='" + ISeal.KeysetDate + "'][@time='" + ISeal.KeysetTime + "']/status/plain"; 
					var StatusNode = IDocument.selectSingleNode(XPath);
					var Date = StatusNode.getAttribute("date");
					var Time = StatusNode.getAttribute("time");
					var Operator1 = StatusNode.selectSingleNode("operator1").text;
					var Operator2 = StatusNode.selectSingleNode("operator2").text;
					var InspDoc = new ActiveXObject("Msxml2.DOMDocument");
					var Root = InspDoc.createElement("i");					
					InspDoc.documentElement = Root;
					
					var Attr = InspDoc.createAttribute("date");
					Attr.value = Date;
					Root.setAttributeNode(Attr);
					Attr = InspDoc.createAttribute("time");
					Attr.value = Time;
					Root.setAttributeNode(Attr);
					Attr = InspDoc.createAttribute("o1");
					Attr.value = Operator1;
					Root.setAttributeNode(Attr);
					Attr = InspDoc.createAttribute("o2");
					Attr.value = Operator2;
					Root.setAttributeNode(Attr);

					AddValue(InspDoc, Root, m.id, m.value);
					AddValue(InspDoc, Root, l.id, l.value);
					AddValue(InspDoc, Root, c.id, c.value);
					AddValue(InspDoc, Root, a.id, a.value);
					AddValue(InspDoc, Root, n.id, n.value);
					AddValue(InspDoc, Root, r.id, r.value);
					AddValue(InspDoc, Root, k1.id, k1.value);
					AddValue(InspDoc, Root, k2.id, k2.value);
					AddValue(InspDoc, Root, k3.id, k3.value);
					AddValue(InspDoc, Root, s1.id, s1.value);
					AddValue(InspDoc, Root, s2.id, s2.value);
					AddValue(InspDoc, Root, s3.id, s3.value);
					AddValue(InspDoc, Root, ni.id, ni.value);
					AddValue(InspDoc, Root, pu.id, pu.value);
					AddValue(InspDoc, Root, eu.id, eu.value);
					AddValue(InspDoc, Root, fu.id, fu.value);
					AddValue(InspDoc, Root, nu.id, nu.value);
					AddValue(InspDoc, Root, du.id, du.value);
					var Text = InspDoc.xml;
					
					try {
						ISeal.WritePad(Text);
						window.location.href ="EossReaderStoreCompleted.htm";
					}
					catch (e) {
						window.location.href ="EossReaderError.htm";
					}
               Body.style.cursor = "default";
               StoreButton.style.cursor = "default";
				}
				catch (e) {}
			}
			
			function KeyChar(KeyCode)
			{
				var C = String.fromCharCode(KeyCode);
				// exclude XML control characters
				if ((C == "<") || (C == ">") || (C == "&") || (C == '"'))
					throw "illegal charater";
				return C;
			}
			function Integer(C)
			{
				if ((C < "0") || (C > "9"))
					throw "illegal charater";
			}
			function Float(C)
			{
				if (C ==".")
				{
					S = window.event.srcElement.value;
					if (S.indexOf(".") != -1)
						throw "illegal charater";
					return;
				}
				if ((C < "0") || (C > "9"))
					throw "illegal charater";
			}
			function Truncate(Max)
			{
				if (window.event.srcElement.value.length >= Max)
					throw "truncated"
			}
			function Filter(Format)
			{
				try {
					var Char = KeyChar(window.event.keyCode);
					switch(Format) {
					case "Integer":	Integer(Char);
									break;
					case "Float":	Float(Char);
									break;
					case "Text60":	Truncate(60);
									break;
					 }
				} catch (e) {window.event.returnValue = false};
			}				
			function Change()
			{
				Modified.innerText = "Changes have not yet been stored!";
			}
		</script>
	</head>
	<body id="Body">
		<h1>EOSS S/N <span id="SerialNumber"></span>
		</h1>
		<table cellSpacing="0" cellPadding="0" width="100%">
			<tr>
				<td class="corner" width="5" height="5"><img src="ulsb.gif"></td>
				<td class="windowcaption"></td>
				<td class="corner" width="5" height="5"><img src="ursb.gif"></td>
			</tr>
			<tr class="windowcaption">
				<td width="5"></td>
				<td>Inspection Data</td>
				<td width="5"></td>
			</tr>
		</table>
		<table class="windowframe" cellSpacing="0" cellPadding="5" width="100%">
			<tr class="info">
				<td align="center">
					<b><span id="Modified">Loading...</span></b>
				</td>
			</tr>
			<tr class="info">
				<td>
					<table cellSpacing="0" cellPadding="0" width="100%">
						<tr class="info">
							<td>MBA Code :</td>
							<td><INPUT onkeypress="Filter('Text')" onchange="Change()" id="m" type="text" maxLength="6" NAME="m"></td>
						</tr>
						<tr class="info">
							<td>Location:</td>
							<td><INPUT onkeypress="Filter('Text')" onchange="Change()" id="l" type="text" size="20" maxLength="12" NAME="l"></td>
						</tr>
						<tr class="info">
							<td>Application Code:</td>
							<td><SELECT id="a" onchange="Change()" NAME="a">
									<OPTION selected></OPTION>
									<OPTION VALUE="MC">MC (material in cask)</OPTION>
									<OPTION VALUE="MO">MO (material in other containers)</OPTION>
									<OPTION VALUE="MP">MP (material in fuel pond)</OPTION>
									<OPTION VALUE="NC">NC (optical surv. equipment)</OPTION>
								</SELECT></td>
						</tr>
						<tr class="info">
							<td>Inspection No.:</td>
							<td><INPUT onkeypress="Filter('Text')" onchange="Change()" id="n" type="text" maxLength="5" NAME="n"></td>
						</tr>
						<tr class="info">
							<td>Replacement of:</td>
							<td><INPUT onkeypress="Filter('Integer')" onchange="Change()" id="r" type="text" maxLength="7" NAME="r"></td>
						</tr>
						<tr class="info">
							<td>KMP:</td>
							<td><INPUT onkeypress="Filter('Text')" onchange="Change()" id="k1" type="text" size="1" maxLength="1" NAME="k1">
								<INPUT onkeypress="Filter('Text')" onchange="Change()" id="k2" type="text" size="1" maxLength="1" NAME="k2">
								<INPUT onkeypress="Filter('Text')" onchange="Change()" id="k3" type="text" size="1" maxLength="1" NAME="k3"></td>
						</tr>
						<tr class="info">
							<td>Stratum:</td>
							<td><INPUT onkeypress="Filter('Text')" onchange="Change()" id="s1" type="text" maxLength="3" size="3" NAME="s1">
								<INPUT onkeypress="Filter('Text')" onchange="Change()" id="s2" type="text" maxLength="3" size="3" NAME="s2">
								<INPUT onkeypress="Filter('Text')" onchange="Change()" id="s3" type="text" maxLength="3" size="3" NAME="s3"></td>
						</tr>
						<tr class="info">
							<td>Items:</td>
							<td><INPUT onkeypress="Filter('Integer')" onchange="Change()" id="ni" type="text" maxLength="5" NAME="ni"></td>
						</tr>
						<tr class="info">
							<td>Plutonium [g]:</td>
							<td><INPUT onkeypress="Filter('Float')" onchange="Change()" id="pu" type="text" maxLength="16" NAME="pu"></td>
						</tr>
						<tr class="info">
							<td>Enriched Uranium [g]:</td>
							<td><INPUT onkeypress="Filter('Float')" onchange="Change()" id="eu" type="text" maxLength="16" NAME="eu"></td>
						</tr>
						<tr class="info">
							<td>Fissile Uranium [g]:</td>
							<td><INPUT onkeypress="Filter('Float')" onchange="Change()" id="fu" type="text" maxLength="16" NAME="fu"></td>
						</tr>
						<tr class="info">
							<td>Natural Uranium [kg]:</td>
							<td><INPUT onkeypress="Filter('Float')" onchange="Change()" id="nu" type="text" maxLength="16" NAME="nu"></td>
						</tr>
						<tr class="info">
							<td>Depleted Uranium [kg]:</td>
							<td><INPUT onkeypress="Filter('Float')" onchange="Change()" id="du" type="text" maxLength="16" NAME="du"></td>
						</tr>
						<tr class="info">
							<td>Comment:</td>
							<td><TEXTAREA onkeypress="Filter('Text60')" onchange="Change()" id="c" rows="2" cols="40" NAME="c"></TEXTAREA></td>
						</tr>
					</table>
				</td>
			</tr>
			<tr class="info">
				<td>
					<table cellSpacing="1" cellPadding="5" width="100%">
						<tr class="menu">
							<td><INPUT id="StoreButton" title="Store" onclick="Store()" type="button" value="Store">
							</td>
						</tr>
						<tr class="menu">
							<td><a href="EossReaderActions.htm">&lt;&lt;&nbsp;Back to Actions</a>
							</td>
						</tr>
					</table>
				</td>
			</tr>
		</table>
	</body>
</html>
